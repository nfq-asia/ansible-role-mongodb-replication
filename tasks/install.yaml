---
- name: ensure gpg available
  apt:
    name: gnupg
    state: present
    update_cache: true

- name: add Mongodb source key
  apt_key:
    url: "{{ mongodb_source_key }}"
    state: present

- name: add Mongodb source
  apt_repository:
    repo: "{{ mongodb_source_url }}"
    filename: "mongodb-org-{{ mongodb_version }}"
    state: present

- name: install mongodb
  apt:
    name: mongodb-org
    state: present

- name: Make a directory
  file:
    path: /var/lib/mongodb
    state: directory
    owner: mongodb
    group: mongodb
    mode: 0775

- name: re-apply the mongodb configuration
  template:
    src: "{{ mongodb_conf_template }}"
    dest: "/etc/mongod.conf"
  notify: restart mongod

- name: Configure MongoDB
  systemd: 
    name: mongod
    state: restarted
    enabled: true

- name: Make logrotate directory
  file:
    path: /etc/logrotate.d
    state: directory

- name: Configure logrotate
  template:
    src: "{{ mongodb_logrotate_conf_template }}"
    dest: "/etc/logrotate.d/mongod_logrotate.conf"

- name: Install related pip package for mongodb
  pip: 
    name: pymongo

- name: Config mongodb admin user
  mongodb_user:
    name: admin
    database: admin
    password: "{{ admin_password }}"
    roles: "{{ admin_roles }}"
    state: present
    update_password: on_create
  register: add_admin

- name: Config mongodb addtional user
  mongodb_user:
    name: "{{ item.key }}"
    database: "{{ item.value.database }}"
    password: "{{ item.value.password }}"
    roles: "{{ item.value.roles }}"
    state: "{{ item.value.state }}"
    update_password: on_create
    login_database: admin
    login_user: admin
    login_password: "{{ admin_password }}"
    login_port: "27017"
  with_dict: "{{ users }}"

- name: force all notified handlers to run at this point, for applying all mongodb configs
  meta: flush_handlers
